{"version":3,"sources":["style/theme.jsx","api/index.js","store/index.js","components/loader/loader.style.js","components/loader/loader.jsx","components/questions-list/question-list.style.js","components/questions-list/question-list.jsx","components/retry-action/retry-action.jsx","icons/chevron-left.svg","components/navbar/navbar.style.js","components/navbar/navbar.jsx","components/search/search.style.js","components/search/search.jsx","components/share-screen/share-screen.style.js","components/share-screen/share-screen.jsx","components/question-details/question-details.style.js","components/question-details/question-details.jsx","pages/HomePage/homePage.style.js","pages/HomePage/homePage.jsx","pages/QuestionDetailPage/questionDetailsPage.style.js","pages/QuestionDetailPage/questionDetailsPage.jsx","App.js","hoc/NetworkDetector.js","index.js"],"names":["defaultTheme","primary","danger","success","gray","fontSize","default","small","large","extraLarge","fontWeight","light","regular","semiBold","bold","extraBold","ThemeProvider","children","theme","url","checkHealthStatus","a","axios","get","response","fetchQuestions","queryParams","changeableUrl","fetchQuestion","questionId","shareContentUrl","destinationEmail","contentUrl","post","addVote","vote","put","StateContext","createContext","AppStateProvider","useState","questions","setQuestions","useEffect","data","status","contextValue","Provider","value","Spin","styled","div","SpinContainer","Loader","Card","Title","h3","TotalVote","Row","Content","Button","button","QuestionsList","history","useHistory","useContext","state","isLoading","setIsLoading","length","map","question","id","thumb_url","published_at","onClick","push","src","alt","Date","toDateString","Container","RetryAction","window","location","reload","Nav","Navbar","backNav","className","to","chevronIcon","Form","Search","filterValue","setFilterValue","search","useLocation","URLSearchParams","inputRef","useRef","filterQuestion","pathname","current","focus","type","placeholder","onChange","e","target","ref","title","disabled","Modal","ModalContent","form","ErrorMsg","span","ShareScreen","toggle","setDestinationEmail","valid","setIsValid","emailRegex","href","sendShareContentUrl","preventDefault","toast","setTimeout","event","email","test","validateEmail","Question","QuestionDetails","match","questionDetail","setQuestionDetail","setDisabled","visible","setVisible","params","image_url","choices","handleVote","c","choice","votes","prevState","style","display","marginLeft","Collection","HomePage","serverHealthOk","setSeverHealthOk","checkServerHealth","questionList","QuestionDetailsPage","configure","ComposedComponent","NetworkDetector","exact","path","component","isDisconnected","handleConnectionChange","navigator","onLine","setState","webPing","setInterval","fetch","mode","then","clearInterval","catch","this","addEventListener","removeEventListener","error","props","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.619439ef.chunk.js","sourcesContent":["import { ThemeProvider as StyledProvider } from 'styled-components';\r\n\r\nconst defaultTheme = {\r\n  primary: '#007500',\r\n  danger: '#EF5252',\r\n  success: '#6BFA8B',\r\n  gray: '#F3F3F3',\r\n\r\n  fontSize: {\r\n    default: '13px',\r\n    small: '11px',\r\n    large: '17px',\r\n    extraLarge: '19px'\r\n  },\r\n\r\n  fontWeight: {\r\n    light: 300,\r\n    regular: 400,\r\n    semiBold: 600,\r\n    bold: 700,\r\n    extraBold: 800\r\n  }\r\n};\r\n\r\nconst ThemeProvider = ({ children }) => (\r\n  <StyledProvider theme={defaultTheme}>\r\n    <>\r\n      {children}\r\n    </>\r\n  </StyledProvider>\r\n);\r\n\r\nexport default ThemeProvider;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://private-anon-5a4497e834-blissrecruitmentapi.apiary-mock.com/';\r\n\r\nexport const checkHealthStatus = async () => {\r\n  const response = await axios.get(`${url}/health`);\r\n  return response;\r\n}\r\n\r\nexport const fetchQuestions = async (queryParams) => {\r\n  let changeableUrl = `${url}/questions`;\r\n\r\n  if(queryParams) {\r\n    changeableUrl = `${changeableUrl}?filter=${queryParams}`;\r\n  }\r\n\r\n  const response = await axios.get(changeableUrl);\r\n  return response;\r\n}\r\n\r\nexport const fetchQuestion = async (questionId) => {\r\n  const response = await axios.get(`${url}/questions/${questionId}`);\r\n  return response;\r\n}\r\n\r\nexport const shareContentUrl = async (destinationEmail, contentUrl) => {\r\n  const response = \r\n    await axios.post(`${url}/share?destination_email=${destinationEmail}&content_url=${contentUrl}`);\r\n\r\n  return response\r\n}\r\n\r\nexport const addVote = async (questionId, vote) => {\r\n  const response = await axios.put(`${url}/questions/${questionId}`, vote);\r\n  return response;\r\n}\r\n","import {createContext, useEffect, useState} from 'react';\r\nimport { fetchQuestions } from '../api';\r\n\r\nexport const StateContext = createContext(null);\r\n\r\nexport const AppStateProvider = ({children}) => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { data, status } = await fetchQuestions();\r\n      if (status === 200) { setQuestions(data) }\r\n    })()\r\n  }, []);\r\n\r\n  const contextValue = {\r\n    questions,\r\n    setQuestions\r\n  }\r\n\r\n  return <StateContext.Provider value={contextValue}>{children}</StateContext.Provider>\r\n}","import styled from 'styled-components';\r\n\r\nconst Spin  =  styled.div`\r\n  border: 8px solid ${({ theme }) => theme.gray};\r\n  border-radius: 50%;\r\n  border-top: 8px solid ${({ theme }) => theme.primary};\r\n  width: 80px;\r\n  height: 80px;\r\n  -webkit-animation: spin 2s linear infinite; /* Safari */\r\n  animation: spin 2s linear infinite;\r\n\r\n  @-webkit-keyframes spin {\r\n    0% { -webkit-transform: rotate(0deg); }\r\n    100% { -webkit-transform: rotate(360deg); }\r\n  }\r\n  \r\n  @keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n  }\r\n`\r\n\r\nconst SpinContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height:50vh;\r\n`\r\n\r\nexport {Spin, SpinContainer};\r\n","import React from 'react';\r\nimport {Spin, SpinContainer} from './loader.style';\r\n\r\nconst Loader = () => (\r\n  <SpinContainer >\r\n    <Spin data-testid=\"loader\" />\r\n  </SpinContainer>\r\n)\r\n\r\nexport default Loader;\r\n","import styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\n  position: relative;\r\n  padding:8px 30px 25px 0;\r\n  margin-top: 28px;\r\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.1);\r\n  background-color:#fff;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  span {\r\n    color: #757575;\r\n    font-size:12px;\r\n    letter-spacing:1px;\r\n    margin-left:10px;\r\n  }\r\n\r\n  img {\r\n    border-radius: 50%;\r\n    height: 50px;\r\n    width: 50px;\r\n    border: solid 1px ${({ theme }) => theme.primary};\r\n    padding: 4px;\r\n    align-items: center;\r\n  }\r\n`\r\nconst Title = styled.h3`\r\n  font-weight: bold;\r\n  font-size: 22px;\r\n  margin-left:10px;\r\n  margin-bottom:0;\r\n  margin-top:0;\r\n  padding:0;\r\n  color:#616161;\r\n`\r\n\r\nconst TotalVote = styled.div`\r\n  padding: 8px 12px;\r\n  border-radius: 20px;\r\n  border: solid 2px ${({ theme }) => theme.primary};\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  color:${({ theme }) => theme.primary};\r\n  background-color:#FFF;\r\n  position: absolute;\r\n  top:-12px;\r\n  right:-20px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top:18px;\r\n`\r\nconst Content = styled.div`\r\n  align-items: center;\r\n`\r\nconst Button = styled.button`\r\n  outline: 0;\r\n  background-color: ${({ theme }) => theme.primary};\r\n  color: #FFF;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  border: 0;\r\n  font-size: 14px;\r\n  border-radius: 8px;\r\n  padding: 0 18px;\r\n  cursor: pointer;\r\n  margin-top: 18px;\r\n`\r\n\r\nexport { Card, TotalVote, Title, Row, Content, Button };\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { StateContext as state } from '../../store';\r\nimport { Loader } from '../../components';\r\nimport { Card, Row, Content, TotalVote, Title, Button } from './question-list.style';\r\n\r\nconst QuestionsList = () => {\r\n  const history = useHistory();\r\n  const { questions, setQuestions } = useContext(state);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (questions.length > 0) {\r\n        setIsLoading(false);\r\n      }\r\n    })()\r\n  }, [questions])\r\n  \r\n  const buildQuestionList = () => (\r\n    questions.length > 0 && (\r\n      questions.map(({question, id, thumb_url, published_at }) => (\r\n        <Card key={id} onClick={() => history.push(`/questions/${id}`)}>\r\n          <Row>\r\n            <img src={thumb_url} alt=\"thumbnail\" />\r\n            <Content>\r\n              <Title>\r\n                {`#${id} - ${question}`}\r\n              </Title>\r\n              <span>Published {new Date(published_at).toDateString()}</span>\r\n            </Content>\r\n          </Row>\r\n          <TotalVote>3,840 Votes</TotalVote>\r\n        </Card>\r\n      ))\r\n    )\r\n  )\r\n\r\n  return (\r\n    <> \r\n      {\r\n        isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            { buildQuestionList() } \r\n            <Row>\r\n              <Button onClick={() => setQuestions([...questions, ...questions])}>Load more...</Button>\r\n            </Row>\r\n          </>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuestionsList;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center; \r\n  justify-content: center;\r\n  height: 100vh;\r\n`\r\nconst Content = styled.div`\r\n  border: solid 1px ${({ theme }) => theme.primary}; \r\n  width: 320px; \r\n  padding: 18px; \r\n  text-align:center;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-color: ${({ theme }) => theme.primary}; \r\n  margin-top: 8px;\r\n  color: white; \r\n  border: none;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst RetryAction = () => (\r\n  <Container>\r\n    <Content>\r\n      Service Unavailable. Please try again later.\r\n      <Button onClick={() => window.location.reload()}>Try Again</Button>\r\n    </Content>\r\n  </Container>\r\n)\r\n\r\nexport default RetryAction;\r\n","export default __webpack_public_path__ + \"static/media/chevron-left.4e29fb95.svg\";","import styled from 'styled-components';\r\n\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  padding: 12px 22px;\r\n  background-color:#fff;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color:#616161;\r\n  }\r\n\r\n  .logo {\r\n    display: flex;\r\n    cursor: pointer;\r\n  }\r\n  `\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport chevronIcon from '../../icons/chevron-left.svg';\r\nimport Nav from './navbar.style';\r\n\r\nconst Navbar = ({backNav}) => {\r\n  const logoUrl = 'https://static.apiary.io/assets/1lqsC4I4.png';\r\n\r\n  return (\r\n    <Nav>\r\n      <NavLink className=\"logo\" to=\"/\">\r\n        {\r\n          backNav ? \r\n          (<><img src={chevronIcon} alt=\"back navigation\" /> Back to question list</>) : \r\n          (<img src={logoUrl} alt=\"bliss logo\" />)\r\n        }\r\n      </NavLink>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import styled from \"styled-components\";\r\n\r\nconst Form = styled.div`\r\n  .search-input {\r\n    outline: 0;\r\n    height: 42px;\r\n    width: 85%;\r\n    line-height: 42px;\r\n    padding: 0 16px;\r\n    color: #212121;\r\n    border: solid 1px ${({ theme }) => theme.primary};\r\n    float: left;\r\n    border-radius: 4px 0 0 4px;\r\n  }\r\n\r\n  button {\r\n    outline: 0;\r\n    background-color: ${({ theme }) => theme.primary};\r\n    color: #FFF;\r\n    height: 42px;\r\n    text-align: center;\r\n    line-height: 42px;\r\n    border: 0;\r\n    font-size: 16px;\r\n    -webkit-border-radius: 0 4px 4px 0;\r\n    border-radius: 0 4px 4px 0;\r\n    padding: 0 18px;\r\n    cursor: pointer;\r\n  }\r\n`\r\nexport default Form;\r\n","import React, { useRef, useState, useEffect, useContext } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { StateContext as state } from '../../store';\r\nimport { fetchQuestions } from '../../api';\r\nimport Form from './search.style';\r\n\r\nconst Search = () => {\r\n  const [filterValue, setFilterValue] = useState('');\r\n  const { setQuestions } = useContext(state);\r\n  const history = useHistory();\r\n  const search = useLocation().search;\r\n  const queryParams = new URLSearchParams(search).get(\"filter\");\r\n  const inputRef = useRef();\r\n\r\n  const filterQuestion = async () => {\r\n    history.push({\r\n      pathname:'/questions',\r\n      search: `?filter=${filterValue}`\r\n    });\r\n\r\n    const { data } = await fetchQuestions(filterValue);\r\n    setQuestions(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(queryParams) {\r\n      setFilterValue(queryParams);\r\n      filterQuestion(filterValue);\r\n    } else if(queryParams === '') {\r\n      inputRef.current.focus();\r\n      filterQuestion(filterValue);\r\n    }\r\n  }, [queryParams]);\r\n\r\n  return (\r\n    <Form>\r\n      <input\r\n        type=\"search\"\r\n        className=\"search-input\"\r\n        placeholder=\"Filter\r\n        questions...\"\r\n        onChange={(e) => setFilterValue(e.target.value)}\r\n        value={filterValue}\r\n        ref={inputRef}\r\n      />\r\n      <button\r\n        title=\"Search\"\r\n        className=\"btn\"\r\n        disabled={filterValue ? false : true}\r\n        onClick={filterQuestion}\r\n      >\r\n        Filter\r\n      </button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import styled from 'styled-components';\r\n\r\nconst Modal = styled.div`\r\n  display: block; \r\n  position: fixed;\r\n  z-index: 1;\r\n  padding-top: 100px;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%; \r\n  background-color: rgb(0,0,0);\r\n  background-color: rgba(0,0,0,0.4);\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  background-color: #fefefe;\r\n  margin: auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 350px;\r\n\r\n  .close {\r\n    color: #aaaaaa;\r\n    float: right;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .close:hover,\r\n  .close:focus {\r\n    color: #000;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Form = styled.form`\r\n  .text-input {\r\n    outline: 0;\r\n    height: 39px;\r\n    width: 60%;\r\n    line-height: 42px;\r\n    padding: 0 16px;\r\n    color: #212121;\r\n    border: solid 1px ${({ theme }) => theme.primary};\r\n    float: left;\r\n    border-radius: 4px 0 0 4px;\r\n  }\r\n\r\n  button {\r\n    outline: 0;\r\n    background-color: ${({ theme }) => theme.primary};\r\n    color: #FFF;\r\n    height: 42px;\r\n    text-align: center;\r\n    line-height: 42px;\r\n    border: 0;\r\n    font-size: 16px;\r\n    -webkit-border-radius: 0 4px 4px 0;\r\n    border-radius: 0 4px 4px 0;\r\n    padding: 0 18px;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ErrorMsg = styled.span `\r\n  color: ${({ theme }) => theme.danger} !important;\r\n`\r\n\r\nexport {Modal, ModalContent, Form, ErrorMsg };\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { shareContentUrl } from '../../api';\r\nimport { Modal, ModalContent, Form, ErrorMsg } from './share-screen.style';\r\n\r\nconst ShareScreen = ({toggle}) => {\r\n  const [destinationEmail, setDestinationEmail] = useState('');\r\n  const [valid, setIsValid] = useState(false);\r\n\r\n  const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n  const contentUrl = window.location.href;\r\n\r\n  const validateEmail = (event) => {\r\n    const email = event.target.value;\r\n    setDestinationEmail(email);\r\n    if (emailRegex.test(email)) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  const sendShareContentUrl = async(e) => {\r\n    e.preventDefault();\r\n    const { data: { status } } = await shareContentUrl(destinationEmail, contentUrl);\r\n\r\n    if (status === 'OK') {\r\n      toast.success('Link shared Successfully');\r\n      setTimeout(() =>  toggle(), 1000)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Modal>\r\n        <ModalContent>\r\n          <span className=\"close\" onClick={toggle}>&times;</span>\r\n          <Form>\r\n            <input\r\n              type=\"email\"\r\n              className=\"text-input\"\r\n              placeholder=\"enter email\"\r\n              onChange={(e) => validateEmail(e)}\r\n            />\r\n            <button\r\n              title=\"share\"\r\n              className=\"btn\"\r\n              onClick={(e) => sendShareContentUrl(e)}\r\n            >\r\n              Share\r\n            </button>\r\n          </Form>\r\n          {!valid && destinationEmail && <ErrorMsg>enter a valid email</ErrorMsg>}\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ShareScreen;\r\n","import styled from \"styled-components\";\r\n\r\nconst Question = styled.div`\r\n\r\n  h3 {\r\n    margin-bottom:0px;\r\n  }\r\n\r\n  span {\r\n    color: #757575;\r\n    font-size:12px;\r\n    letter-spacing:1px;\r\n  }\r\n\r\n  .option {\r\n    display:flex;\r\n    margin-top: 20px;\r\n    padding:18px 30px;\r\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.1);\r\n    background-color:#fff;\r\n    border-radius: 5px;\r\n    border: none;\r\n    width:100%;\r\n  }\r\n\r\n  .option:hover {\r\n    border: solid 2px ${({ theme }) => theme.primary};\r\n    cursor: pointer;\r\n  }\r\n\r\n  .choice {\r\n    margin-right: auto;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  width:100%;\r\n  align-items: center;\r\n`\r\nconst Button = styled.button`\r\n  outline: 0;\r\n  color: ${({ theme }) => theme.primary};\r\n  height: 42px;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  border: 0;\r\n  font-size: 16px;\r\n  border-radius: solid 1px ${({ theme }) => theme.primary};\r\n  padding: 0 18px;\r\n  cursor: pointer;\r\n  margin-top: 18px;\r\n`\r\n\r\nexport { Question, Container, Button };\r\n","import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Loader, ShareScreen } from '../../components';\r\nimport { fetchQuestion, addVote } from '../../api';\r\nimport { Question, Container, Button } from './question-details.style';\r\n\r\nconst QuestionDetails = ({match}) => {\r\n  const [questionDetail, setQuestionDetail] = useState([]);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const { questionId } = match.params;\r\n\r\n  const { id, question, image_url, published_at, choices } = questionDetail;\r\n\r\n  const toggle = () => setVisible(!visible);\r\n\r\n  useEffect(() => {\r\n    (async() => {\r\n      const { data, status } = await fetchQuestion(questionId);\r\n      if(status === 200) {\r\n        setQuestionDetail(data);\r\n        setIsLoading(false);\r\n      }\r\n    })()\r\n  },[]);\r\n\r\n  const handleVote = async(e) => {\r\n    const { value } = e.target;\r\n    const vote = choices.map(c => {\r\n      if(c.choice === value){ c.votes += 1}\r\n      return c\r\n    });\r\n\r\n    setQuestionDetail(prevState => ({\r\n      ...prevState,\r\n      ['choices']: vote\r\n    }));\r\n\r\n    const { status } = await addVote(questionId, vote);\r\n    if (status === 201) {\r\n      toast.success('Vote Successfully');\r\n    }\r\n\r\n    setDisabled(true);\r\n  }\r\n\r\n  const buildQuestion = () => (\r\n    <>\r\n      {visible && <ShareScreen toggle={toggle} />}\r\n      <img src={image_url} alt={question} />\r\n      <div style={{display: 'flex'}}>\r\n        <div>\r\n          <h3>{`#${id} - ${question}`}</h3>\r\n          <span>Published {new Date(published_at).toDateString()}.</span>\r\n        </div>\r\n        <div style={{marginLeft: 'auto'}}>\r\n          <Button onClick={toggle}>Share</Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  const buildChoices = () => \r\n    choices && choices.map(({choice, votes}) => (\r\n    <button className=\"option\" key={choice} value={choice} onClick={handleVote} disabled={disabled}>\r\n      <div className=\"choice\">{choice}</div>\r\n      <span>{votes} views</span>\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ? (\r\n         <Container> <Loader /></Container>\r\n        ) : (\r\n          <Question>\r\n            { buildQuestion() }\r\n            { buildChoices() }\r\n          </Question>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default QuestionDetails;\r\n","import styled from 'styled-components';\r\n\r\nconst Collection = styled.div`\r\n  margin: 3% 30%;\r\n`\r\nconst Button = styled.button`\r\n  outline: 0;\r\n  color: ${({ theme }) => theme.primary};\r\n  height: 42px;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  border: 0;\r\n  font-size: 16px;\r\n  border-radius: solid 1px ${({ theme }) => theme.primary};\r\n  padding: 0 18px;\r\n  cursor: pointer;\r\n  margin-top: 18px;\r\n`\r\nexport { Collection, Button };\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { Loader, RetryAction, QuestionsList, Navbar, Search, ShareScreen,  } from '../../components';\r\nimport { checkHealthStatus } from '../../api';\r\nimport { Collection, Button } from './homePage.style';\r\n\r\nconst HomePage = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [serverHealthOk, setSeverHealthOk] = useState(false);\r\n\r\n  const toggle = () => setVisible(!visible);\r\n\r\n  const checkServerHealth = async () => {\r\n    const {data: {status}} = await checkHealthStatus();\r\n    if (status === 'OK') {\r\n      setIsLoading(false);\r\n      setSeverHealthOk(true);\r\n    } else if (status === 'Service Unavailable. Please try again later.') {\r\n      setSeverHealthOk(false);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const questionList = () => {\r\n    if(!isLoading) {\r\n      if (!serverHealthOk) {\r\n        return <RetryAction />\r\n      } else {\r\n        return <QuestionsList />\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => { checkServerHealth()}, []);\r\n  \r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ):(\r\n        <>\r\n          {visible && <ShareScreen toggle={toggle} />}\r\n          <Navbar />\r\n          <Collection>\r\n            <div style={{display: 'grid'}}>\r\n              <Search />\r\n              <div><Button onClick={toggle}>Share</Button></div>\r\n            </div>\r\n            { questionList() }\r\n          </Collection>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  margin 5% 20%;\r\n  display:flex;\r\n`;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n\r\nimport { Navbar, QuestionDetails }from '../../components';\r\nimport Container from './questionDetailsPage.style';\r\n\r\nconst QuestionDetailsPage = ({ match }) => (\r\n  <>\r\n    <Navbar backNav={true} />\r\n    <Container>\r\n      <QuestionDetails match={match} />\r\n    </Container>\r\n  </>\r\n)\r\n\r\nexport default QuestionDetailsPage;\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport 'react-toastify/scss/main.scss';\r\n\r\nimport { AppStateProvider } from './store';\r\nimport { HomePage, QuestionDetailsPage } from './pages';\r\nimport NetworkDetector from './hoc/NetworkDetector';\r\n\r\ntoast.configure();\r\n\r\nconst App = () => (\r\n  <AppStateProvider>\r\n    <Router>\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/questions\" />\r\n      </Route>\r\n      <Route component={HomePage} exact path=\"/questions\" />\r\n      <Route component={QuestionDetailsPage} exact path=\"/questions/:questionId\" />\r\n    </Router>\r\n  </AppStateProvider>\r\n)\r\n\r\nexport default NetworkDetector(App);\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function (ComposedComponent) {\r\n\r\n  class NetworkDetector extends Component {\r\n    state = {\r\n      isDisconnected: false\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.handleConnectionChange();\r\n      window.addEventListener('online', this.handleConnectionChange);\r\n      window.addEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('online', this.handleConnectionChange);\r\n      window.removeEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n\r\n    handleConnectionChange = () => {\r\n      const condition = navigator.onLine ? 'online' : 'offline';\r\n      if (condition === 'online') {\r\n        const webPing = setInterval(\r\n          () => {\r\n            fetch('//google.com', {\r\n              mode: 'no-cors',\r\n              })\r\n            .then(() => {\r\n              this.setState({ isDisconnected: false }, () => {\r\n                return clearInterval(webPing)\r\n              });\r\n            }).catch(() => this.setState({ isDisconnected: true }) )\r\n          }, 2000);\r\n        return;\r\n      }\r\n\r\n      return this.setState({ isDisconnected: true });\r\n    }\r\n\r\n    render() {\r\n      const { isDisconnected } = this.state;\r\n      return (\r\n        <div>\r\n          { \r\n            isDisconnected && toast.error('Internet connection lost')\r\n          }\r\n          <ComposedComponent {...this.props} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return NetworkDetector;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ThemeProvider from './style/theme';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}